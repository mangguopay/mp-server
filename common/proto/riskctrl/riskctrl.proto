syntax = "proto3";

package go.micro.srv.riskctrl;

service RiskCtrl {
    // 下单 同步操作
    rpc GetRiskCtrlReuslt (GetRiskCtrlResultRequest) returns (GetRiskCtrlResultReply) {
    }

    // 查单 相当于是判断账号是否被风控住了,如果是,直接打回.
    rpc GetRiskCtrlReuslt2 (GetRiskCtrlResult2Request) returns (GetRiskCtrlResult2Reply) {
    }

    rpc RiskOffline (RiskOfflineRequest) returns (RiskOfflineReply) {}

    // 登录位置风险评估
    rpc Login (LoginRequest) returns (LoginReply) {}

    //dddddddddddddddddddddddddd
}

message GetRiskCtrlResultRequest {
    string api_type = 1;
    string payer_acc_no = 2;
    string action_time = 3;
    string amount  = 4;
    string ip = 5;
    string pay_type = 6;
    // 收款人账号
    string payee_acc_no = 7;

    string product_type = 8;
    // 币种
    string money_type = 9;
    // 订单号
    string order_no = 10;
}

message GetRiskCtrlResultReply {
    string risk_result = 1;
    string op_result = 2;
    string result_code = 3;
    string msg = 4;
    string risk_no = 5;
}

// 查单
message GetRiskCtrlResult2Request {
    string risk_no = 1;
}

message GetRiskCtrlResult2Reply {
    string result_code = 1;
    string msg = 2;
}

message RiskOfflineRequest {
   string api_type = 1;
   string payer_accNo = 2;
   string action_time = 3;
   string eva_execute_type = 4;
   string eva_scord = 5;
   string money_type = 6;
   string order_no = 7;
   string risk_no = 8;
   string product_type = 9;
}

message RiskOfflineReply {
    string result_code = 1;
}

// =======================登录位置风险评估==================================
message LoginRequest {
   string device_id = 1;
   string ip = 2;
   string uid = 3;
}

message LoginReply {
    string result_code = 1;
    string msg = 2;
    string op_result = 3;
    string risk_no = 4;
}
// =========================================================